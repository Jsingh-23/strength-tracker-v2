import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Link from "next/link";
import { useSession } from "next-auth/react";
import image from "next/image";
import { TypeAnimation } from 'react-type-animation';
import { useEffect, useState, useRef } from 'react';
import RegisterModal from '@/components/RegisterModal';



export default function Home() {

  const { data } = useSession();
  const [index, setIndex] = useState(0);
  const timeoutRef = useRef(null);

  const images = [ 'st_test_img.png', 
                   'st_line.png',
                   'st_bar.png'
  ]
  const delay = 1000000;


  // resetTimeout will be used to clear Timeout, and it will be called everytime the index of the
  // slide changes in our slideshow
  function resetTimeout() {
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
    }
  }

  useEffect(() => {
    resetTimeout();
    timeoutRef.current = setTimeout(
      () =>
        setIndex((prevIndex) =>
          prevIndex === images.length - 1 ? 0 : prevIndex + 1
        ),
      delay
    );

    return () => {
      resetTimeout();
    };
  }, [index]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Strength Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          <TypeAnimation 
            style={{
              fontWeight: '550',
            }}
            cursor={true}
            sequence={[
              "Track Your Strength",
              5000,
              "Track Your Weight",
              5000,
              "Track Your Progression",
              5000,
              "Lift Beyond Limits",
              5000,
               "Empower Your Gains",
              5000,
            ]}
            speed={1}
            deletionSpeed={1}
            repeat={Infinity}
            className='typewriter_span'>
          </TypeAnimation>
        </h1>

        {/* if the user is logged in, do not render this */}
        {data !== null ? null : (
          <p className={styles.description}>
            Get started by uploading your <Link className={styles.link} href="/showdata">lifting data!</Link>
          </p>
        )}

        {/* Progress Logging / Learn / Visualize */}
        <div className={styles.grid}>
          <div className={styles.card}>
            <h2> <span><i className="bi bi-pencil-fill"></i></span> Progress Logging</h2>
            <p>Keep track of your weight lifting progress over time</p>
          </div>

          <div className={styles.card}>
            <h2><span><i className="bi bi-book"></i></span> Learn </h2>
            <p>Explore additional exercises and routines to help you on your journey</p>
          </div>

          <div className={styles.card}>
            <h2> <span><i className="bi bi-bar-chart-fill"></i> </span>Visualize</h2>
            <p>Visualize your weight lifting progress through various charts </p>
          </div>
        </div>



        <div className={styles.info}>
          <div className={`${styles.imageContainer}`}>
            <img src="/barchart_example.PNG" className={styles.imageFit}>
            </img>
          </div>
          <p className={styles.info_p}> Join good company </p>
          <h2 className={styles.subheader} >We&apos;ll help you track your progress and optimize your workouts based on your input and your favorite routines.</h2>
        </div>

        <div className={`${styles.info} ${styles.slideshow_info}`}>
          <div className={styles.slideshow_container}>
            <p className={styles.slideshow_p}> Answers for everything </p>
            <h2 className={styles.slideshow_subheader}>Data visualization, made easy for you</h2>
            
            {/* start of slideshow */}
            <div className={styles.slideshow}>
              <div className={styles.slideshowSlider} style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }} >
                {images.map((imageSource, index) => (
                  <div className={styles.slide} key={index}>
                    <img className={styles.slideshow_img} src={imageSource}></img>
                  </div>
                ))}
              </div>

              {/* Slideshow Buttons */}
              <div className="slideshowDots">
                {images.map((_, idx) => (
                  <div key={idx} 
                  className={`${styles.slideshowDot} ${index === idx ? styles.active : ""}`}
                  onClick={() => {
                    setIndex(idx);
                  }}
                  ></div>
                ))}
              </div>

            </div>
            {/* end of slideshow */}
            
          </div>

        </div>

        {/* only render this if the user is not logged in */}
        {data === null && (
          <div className={styles.info2}>
          <h1 className={styles.info2_text}>Want to get started now?</h1>
          <RegisterModal variant="shadow"></RegisterModal>
          {/* <Link href="/register" className={`btn btn-primary ${styles.register_button}`}> Register </Link> */}
          </div>
        )}

      </main>
{/* 
      <footer className={styles.footer}>
          Created by Jaskaranpal Singh
      </footer> */}
    </div>
  )
}
